#2. faza
library(tabulizer)
uvoz_nesrec <- function(ime){
# kategorija <- c("zaporedna_stevilka", "klasifikacija", "postaja", "datum", "ura", "v_naselju", "lokacija", "vrsta_ceste_naselja",
#                 "sifra_ceste_naselja", "tekst_cesta_naselje", "sifra_odseka_ulice", "tekst_odseka_ulice", "stacionaza", "opis", "vzrok", "tip", "vreme",
#                 "stanje_prometa", "stanje_vozisca", "vrsta_vozisca", "longitude", "latitude", "zap_st_osebe", "povzrocitelj", "starost", "spol", "UE_stalnega_prebivalisca",
#                 "drzavljanstvo", "poskodba_udelezenca", "vrsta_udelezenca", "varnostni_pas", "vozniski_staz_leta", "vozniski_staz_mesec", "alkotest", "pregled")
return(read.table(as.character(ime), sep = ";", fill = TRUE, as.is = TRUE, header = TRUE, col.names = c("zaporedna_stevilka", "klasifikacija", "postaja", "datum", "ura", "v_naselju", "lokacija", "vrsta_ceste_naselja",
"sifra_ceste_naselja", "tekst_cesta_naselje", "sifra_odseka_ulice", "tekst_odseka_ulice", "stacionaza", "opis", "vzrok", "tip", "vreme",
"stanje_prometa", "stanje_vozisca", "vrsta_vozisca", "geo_x", "geo_y", "zap_st_osebe", "povzrocitelj", "starost", "spol", "UE_stalnega_prebivalisca",
"drzavljanstvo", "poskodba_udelezenca", "vrsta_udelezenca", "varnostni_pas", "vozniski_staz_leta", "vozniski_staz_mesec", "alkotest", "pregled"), fileEncoding = "Windows-1250"))
}
uvoz_nesrec_leta <- function(ime){
kategorija2 <- c("skupaj", "smrtni_izid", "telesna_poskodba", "materialna_skoda")
leta <- 2005:2014
return(read.table("podatki/st_urad_leta.csv", sep =";", as.is = TRUE, skip = 2, header = TRUE, col.names = c("Mesec", as.vector(outer(kategorija2, leta, paste0))), fileEncoding = "Windows-1250", row.names = 1))
}
View(uvoz_nesrec)
View(uvoz_nesrec_leta)
seznam_PP <- as.data.frame(seznam_PP)
seznam_PP <- as.data.frame(seznam_PP)
seznam_PP <- do.call(rbind, ekstrat)
seznam_PP <- as.data.frame(seznam_PP)
headers <- c("stevilka", "ime", "PU")
names(seznam_PP) <- headers
#2. faza
library(tabulizer)
uvoz_nesrec <- function(ime){
# kategorija <- c("zaporedna_stevilka", "klasifikacija", "postaja", "datum", "ura", "v_naselju", "lokacija", "vrsta_ceste_naselja",
#                 "sifra_ceste_naselja", "tekst_cesta_naselje", "sifra_odseka_ulice", "tekst_odseka_ulice", "stacionaza", "opis", "vzrok", "tip", "vreme",
#                 "stanje_prometa", "stanje_vozisca", "vrsta_vozisca", "longitude", "latitude", "zap_st_osebe", "povzrocitelj", "starost", "spol", "UE_stalnega_prebivalisca",
#                 "drzavljanstvo", "poskodba_udelezenca", "vrsta_udelezenca", "varnostni_pas", "vozniski_staz_leta", "vozniski_staz_mesec", "alkotest", "pregled")
return(read.table(as.character(ime), sep = ";", fill = TRUE, as.is = TRUE, header = TRUE, col.names = c("zaporedna_stevilka", "klasifikacija", "postaja", "datum", "ura", "v_naselju", "lokacija", "vrsta_ceste_naselja",
"sifra_ceste_naselja", "tekst_cesta_naselje", "sifra_odseka_ulice", "tekst_odseka_ulice", "stacionaza", "opis", "vzrok", "tip", "vreme",
"stanje_prometa", "stanje_vozisca", "vrsta_vozisca", "geo_x", "geo_y", "zap_st_osebe", "povzrocitelj", "starost", "spol", "UE_stalnega_prebivalisca",
"drzavljanstvo", "poskodba_udelezenca", "vrsta_udelezenca", "varnostni_pas", "vozniski_staz_leta", "vozniski_staz_mesec", "alkotest", "pregled"), fileEncoding = "Windows-1250"))
}
cat("UvaE>anje podatkov o nesreD
ah..\n")
nesrece2005 <- uvoz_nesrec("podatki/pn2005.csv")
nesrece2005 <- nesrece2005[!duplicated(nesrece2005$zaporedna_stevilka),]
uvoz_nesrec_leta <- function(ime){
kategorija2 <- c("skupaj", "smrtni_izid", "telesna_poskodba", "materialna_skoda")
leta <- 2005:2014
return(read.table("podatki/st_urad_leta.csv", sep =";", as.is = TRUE, skip = 2, header = TRUE, col.names = c("Mesec", as.vector(outer(kategorija2, leta, paste0))), fileEncoding = "Windows-1250", row.names = 1))
}
cat("Uvazanje podatkov o nesrecah po mesecih..\n")
nesrece_leta <- uvoz_nesrec_leta()
ekstrat <- extract_tables("https://www.policija.si/images/stories/O_Policiji/Seznam_vseh_PP_01122017.pdf")
seznam_PP <- do.call(rbind, ekstrat)
seznam_PP <- as.data.frame(seznam_PP)
headers <- c("stevilka", "ime", "PU")
names(seznam_PP) <- headers
seznam_PU <- distinct(seznam_PP[c("PU")])
seznam_imen_PP <- seznam_PP[c("ime")]
library(knitr)
library(rvest)
library(gsubfn)
library(tidyr)
library(tmap)
library(shiny)
library(readr)
library(dplyr)
library(tibble)
library(plyr)
library(knitr)
library(rvest)
library(gsubfn)
library(tidyr)
library(tmap)
library(shiny)
library(readr)
library(dplyr)
library(tibble)
library(plyr)
library(tabulizer)
options(gsubfn.engine="R")
# Uvozimo funkcije za pobiranje in uvoz zemljevida.
source("libraries/uvozi.zemljevid.r", encoding="UTF-8")
# Uvoz potrebnih knjiE>nic
library(rgdal)
library(rgeos)
library(dplyr)
library(readr)
library(ggplot2)
library(digest)
library(mosaic)
# Funkcija uvozi.zemljevid(url, ime.zemljevida, pot.zemljevida="",
#                          mapa="../zemljevidi", encoding=NULL, force=FALSE)
#
# Funkcija najprej preveri, ali zemljevid na podani lokaciji E>e obstaja.
# ne obstaja ali D
#e je parameter force nastavljen na TRUE, pobere arhiv z
# navedenega naslova in ga razE!iri. Nato uvozi zemljevid in ga vrne.
#
# Parametri:
#   * url             Naslov URL, iz katerega naj dobimo arhiv z zemljevidom.
#   * ime.zemljevida  Ime datoteke SHP brez konD
#nice
# Uvoz potrebnih knjiE>nic
library(rgdal)
library(rgeos)
library(dplyr)
library(readr)
library(ggplot2)
library(digest)
library(mosaic)
#   * mapa            Pot do mape, kamor naj se shrani zemljevid (privzeto
#                     mapa "../zemljevid")
#   * encoding        Kodiranje znakov v zemljevidu (privzeta vrednost
#                     NULL, da se pretvorba ne opravi).
#   * force           Ali naj se zemljevid v vsakem primeru pobere z navedenega
#                     naslova (privzeta vrednost FALSE).
#
# VraD
#a:
#   * zemljevid (SpatialPolygonsDataFrame) iz pobranega arhiva
uvozi.zemljevid <- function(url, ime.zemljevida, pot.zemljevida="",
mapa="../zemljevidi", encoding=NULL, force=FALSE) {
zgostitev <- digest(url, algo="sha1")
map <- paste0(mapa, "/", zgostitev)
pot <- paste0(map, "/", pot.zemljevida)
shp <- paste0(pot, "/", ime.zemljevida, ".shp")
zip <- paste0(map, "/", zgostitev, ".zip")
if (force || !file.exists(shp)) {
if (!file.exists(map)) {
dir.create(map, recursive=TRUE)
}
download.file(url, zip)
unzip(zip, exdir=map)
}
re <- paste0("^", gsub("\\.", "\\.", ime.zemljevida), "\\.")
files <- grep(paste0(re, "[a-z0-9.]*$"),
grep(paste0(re, ".*$"), dir(pot), value=TRUE),
value=TRUE, invert=TRUE)
file.rename(paste0(map, "/", files),
paste0(map, "/", sapply(strsplit(files, "\\."),
function(x)
paste(c(x[1:(length(x)-1)], tolower(x[length(x)])),
collapse="."))))
zemljevid <- readOGR(shp, ime.zemljevida)
if (!is.null(encoding)) {
loc <- locale(encoding=encoding)
for (col in names(zemljevid)) {
if (is.factor(zemljevid[[col]])) {
zemljevid[[col]] <- zemljevid[[col]] %>% as.character() %>%
parse_character(locale=loc) %>% factor()
} else if (is.character(zemljevid[[col]])) {
zemljevid[[col]] <- zemljevid[[col]] %>% parse_character(locale=loc)
}
}
}
return(zemljevid)
}
# Primer uvoza zemljevida (slovenske obDine)
# Primer uvoza zemljevida (slovenske obDine)
# obcine <- uvozi.zemljevid("http://baza.fmf.uni-lj.si/OB.zip", "OB",
# Primer uvoza zemljevida (slovenske obDine)
# obcine <- uvozi.zemljevid("http://baza.fmf.uni-lj.si/OB.zip", "OB",
#                         pot.zemljevida="OB", encoding="Windows-1250")
# Primer uvoza zemljevida (slovenske obDine)
# obcine <- uvozi.zemljevid("http://baza.fmf.uni-lj.si/OB.zip", "OB",
#                         pot.zemljevida="OB", encoding="Windows-1250")
sestevek_PP <- table(nesrece2005$postaja)
#2. faza
library(tabulizer)
uvoz_nesrec <- function(ime){
# kategorija <- c("zaporedna_stevilka", "klasifikacija", "postaja", "datum", "ura", "v_naselju", "lokacija", "vrsta_ceste_naselja",
#                 "sifra_ceste_naselja", "tekst_cesta_naselje", "sifra_odseka_ulice", "tekst_odseka_ulice", "stacionaza", "opis", "vzrok", "tip", "vreme",
#                 "stanje_prometa", "stanje_vozisca", "vrsta_vozisca", "longitude", "latitude", "zap_st_osebe", "povzrocitelj", "starost", "spol", "UE_stalnega_prebivalisca",
#                 "drzavljanstvo", "poskodba_udelezenca", "vrsta_udelezenca", "varnostni_pas", "vozniski_staz_leta", "vozniski_staz_mesec", "alkotest", "pregled")
return(read.table(as.character(ime), sep = ";", fill = TRUE, as.is = TRUE, header = TRUE, col.names = c("zaporedna_stevilka", "klasifikacija", "postaja", "datum", "ura", "v_naselju", "lokacija", "vrsta_ceste_naselja",
"sifra_ceste_naselja", "tekst_cesta_naselje", "sifra_odseka_ulice", "tekst_odseka_ulice", "stacionaza", "opis", "vzrok", "tip", "vreme",
"stanje_prometa", "stanje_vozisca", "vrsta_vozisca", "geo_x", "geo_y", "zap_st_osebe", "povzrocitelj", "starost", "spol", "UE_stalnega_prebivalisca",
"drzavljanstvo", "poskodba_udelezenca", "vrsta_udelezenca", "varnostni_pas", "vozniski_staz_leta", "vozniski_staz_mesec", "alkotest", "pregled"), fileEncoding = "Windows-1250"))
}
cat("UvaE>anje podatkov o nesreD
ah..\n")
nesrece2005 <- uvoz_nesrec("podatki/pn2005.csv")
cat("UvaE>anje podatkov o nesreDah..\n")
nesrece2005 <- uvoz_nesrec("podatki/pn2005.csv")
nesrece2005 <- nesrece2005[!duplicated(nesrece2005$zaporedna_stevilka),]
uvoz_nesrec_leta <- function(ime){
kategorija2 <- c("skupaj", "smrtni_izid", "telesna_poskodba", "materialna_skoda")
leta <- 2005:2014
return(read.table("podatki/st_urad_leta.csv", sep =";", as.is = TRUE, skip = 2, header = TRUE, col.names = c("Mesec", as.vector(outer(kategorija2, leta, paste0))), fileEncoding = "Windows-1250", row.names = 1))
}
cat("Uvazanje podatkov o nesrecah po mesecih..\n")
nesrece_leta <- uvoz_nesrec_leta()
ekstrat <- extract_tables("https://www.policija.si/images/stories/O_Policiji/Seznam_vseh_PP_01122017.pdf")
seznam_PP <- do.call(rbind, ekstrat)
seznam_PP <- as.data.frame(seznam_PP)
headers <- c("stevilka", "ime", "PU")
names(seznam_PP) <- headers
seznam_PU <- distinct(seznam_PP[c("PU")])
seznam_imen_PP <- seznam_PP[c("ime")]
sestevek_PP <- table(nesrece2005$postaja)
names(sestevek_PP) <- c("napaka", names(sestevek_PP[-1]))
seznam_nesrec <- rep(0, length(seznam_PU[ ,"PU"]))
names(seznam_nesrec) <- seznam_PU[ ,"PU"]
for (pp in names(sestevek_PP)){
for (i in 1:as.integer(tail(seznam_PP["stevilka"], n = 1))) {
if (grepl(paste("POLICIJSKA POSTAJA ", pp, sep = ""), seznam_PP[i, "ime"])) {
seznam_nesrec[seznam_PP[i, "PU"]] <- as.integer(seznam_nesrec[seznam_PP[i, "PU"]]) + as.integer(sestevek_PP[pp])
break
}
}
}
#sl <- locale("sl", decimal_mark=",", grouping_mark=".")
seznam_nesrec()
#sl <- locale("sl", decimal_mark=",", grouping_mark=".")
seznam_nesrec
#3. faza
source("uvoz/uvoz.r")
source("libraries/uvozi.zemljevid.r")
#3. faza
source("uvoz/uvoz.r")
source("libraries/uvozi.zemljevid.r")
source("libraries/libraries.r")
nesrece_leta <- uvoz_nesrec_leta()
ekstrat <- extract_tables("https://www.policija.si/images/stories/O_Policiji/Seznam_vseh_PP_01122017.pdf")
seznam_PP <- do.call(rbind, ekstrat)
seznam_PP <- as.data.frame(seznam_PP)
headers <- c("stevilka", "ime", "PU")
names(seznam_PP) <- headers
seznam_PU <- distinct(seznam_PP[c("PU")])
seznam_imen_PP <- seznam_PP[c("ime")]
sestevek_PP <- table(nesrece2005$postaja)
names(sestevek_PP) <- c("napaka", names(sestevek_PP[-1]))
seznam_nesrec <- rep(0, length(seznam_PU[ ,"PU"]))
names(seznam_nesrec) <- seznam_PU[ ,"PU"]
for (pp in names(sestevek_PP)){
for (i in 1:as.integer(tail(seznam_PP["stevilka"], n = 1))) {
if (grepl(paste("POLICIJSKA POSTAJA ", pp, sep = ""), seznam_PP[i, "ime"])) {
seznam_nesrec[seznam_PP[i, "PU"]] <- as.integer(seznam_nesrec[seznam_PP[i, "PU"]]) + as.integer(sestevek_PP[pp])
break
}
}
}
zem_slo <- uvozi.zemljevid("http://biogeo.ucdavis.edu/data/gadm2.8/shp/SVN_adm_shp.zip", "SVN_adm1", encoding = "UTF-8")
